<p class='note'><strong>Note:</strong> Tanzu Build Service 1.0.0 is currently only available as a release candidate. These docs are a work-in-progress and may contain some inaccurate or missing info. The final documentation for this page will be available here when TBS is fully GA soon. </p>

---
title: RBAC in Tanzu Build Service
owner: Build Service Team
---

Given that Tanzu Build Service supports functionality most customers would likely want to restrict to only certain users, we encourage utilization of RBAC as a best practice if Tanzu Build Service is to be broadly deployed for usage by many users.

# <a id='rbac'></a> RBAC Support in Tanzu Build Service

Tanzu Build Service is installed with 2 Kubernetes [ClusterRoles](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#role-and-clusterrole) that can be used for RBAC for Build Service users and admins:

* `build-service-user-role`
* `build-service-admin-role`

## <a id='user-role'></a> Build Service User Role

This should be used for users that will create Images and Builds.

To view the configuration for this role:

```
kubectl get clusterrole build-service-user-role -o yaml
```

To use this ClusterRole you should create a [RoleBinding](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding) with an existing user.

Example:

```yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-build-service-user-role-binding
  namespace: my-build-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: build-service-user-role
subjects:
- kind: User
  name: my-user
```

## <a id='admin-role'></a> Build Service Admin Role

This should be used for admin users that will operate Tanzu Build Service.

To view the configuration for this role:

```
kubectl get clusterrole build-service-admin-role -o yaml
```

To use this ClusterRole you should create a [RoleBinding or ClusterRoleBinding](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding) with an existing user.

Example:

```yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-build-service-admin-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: build-service-admin-role
subjects:
- kind: User
  name: my-cluster-wide-admin-user
