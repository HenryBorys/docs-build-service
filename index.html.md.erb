---
title: Pivotal Build Service (Alpha)
owner: Build Service Team
---

<strong><%= modified_date %></strong>

This topic provides an overview of Pivotal Build Service (Alpha).

## <a id='overview'></a> Overview

Pivotal Build Service uses the open-source Cloud Native Buildpacks project to turn app source code into container images.
Build Service executes reproducible builds that align with modern container standards,
and triggers builds automatically when container dependencies change.
You can use Build Service to develop containerized software securely and at scale.

For more information about the Cloud Native Buildpacks project, see [Cloud Native Buildpacks](http://buildpacks.io).

For more information about modern container standards, see [Open Container Initiative](https://github.com/opencontainers/image-spec/blob/master/spec.md) in Github.


## <a id='image-and-team'></a> Image and Team Configurations

Build Service reduces operational overhead and improves security by automating builds of container images for apps in your environment. 

To organize container image builds, Build Service defines `image` and `team` entities, as described below.
To define and modify configurations for `image` and `team` entities, you can use the Build Service CLI, `pb`.

### <a id='image-config'></a> Build Service Images

Build Service `image` configurations include:

- The registry location of a built container image
- Source code for the image
- The team that owns the image
- Other configuration values, as described in [Image Configurations](./using.html#create-image)

Build Service builds container images that resolve any discrepancies between the description of the app in the image configuration and the latest version of the image. 

Build Service can automatically build a new image when the latest versions of app dependencies are available.

For more information about managing images in Build Service, see [Manage Images](./using.html#manage-images).

### <a id='team-config'></a> Build Service Teams

Build Service `team` configurations include:

- The development team that owns container images, as managed by a [UAA server](https://docs.cloudfoundry.org/concepts/architecture/uaa.html)
- Container registries for the team's images, and the registry credentials to access them
- A `builder` file that defines the languages, buildpack versions, plugins, and other build configurations that the team uses

The following are the constraints of teams in Build Service:

* All members of a team are also team `owners` and are able to create new images, manage secrets, and add or remove other users from the team.
* Only the users that belong to a team are able to create images against the team and check the builds against an image.
* Teams cannot reference UAA user groups.
* To add a user to a team, the user email address must exist in UAA.
* Each team must have at least one team member.

For more information about creating and managing teams in Build Service, see [Manage Teams](./using.html#manage-teams).


## <a id='troubleshooting'></a>Troubleshooting

For troubleshooting Build Service, contact the Build Service team. 