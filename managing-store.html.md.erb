---
title: Managing the Store
owner: Build Service Team
---

The Store provides a collection of buildpacks that can be utilized by Builders. Buildpacks are distributed and added to the store in buildpackages which are docker images.

Build Service ships with curated collection of Tanzu buildpacks for Java, Nodejs, Python, go, PHP, httpd, and Dotnet. It is important to keep these buildpacks up-to-date. Updates to these buildpacks are provided on the [Tanzu Network Build Service Dependency](https://network.pivotal.io/products/tbs-dependencies/) page.

In addition to supported Tanzu buildpacks, custom buildpackages can be uploaded to the Build Service store.

<p class='note'><strong>Note:</strong> Only Build Service Admins can perform store commands.</p>

## <a id='add-buildpackages-to-store'></a> Adding Buildpackages to the Store

Users can add multiple buildpackages at a time from a Docker registry or from a file on the local machine:

* If using a Docker registry:

    ```
    pb store add <buildpackage-1> <buildpackage-2> ...
    ```

<p class='note'><strong>Note:</strong> The user must have read access to the source Docker registry and write access to build service registry on the local machine.</p>

* If using local stack images created with `docker save`:

    ```
    pb store add <path-to-buildpackage-1>.tar <path-to-buildpackage-2>.tar ...  --local
    ```

<p class='note'><strong>Note:</strong> At this time <code>pb</code> does not support the <code>.cnb</code> buildpackage format</p>

## <a id='add-buildpackages-to-store'></a> Creating Buildpackages

Documentation for creating buildpackages is available [here](https://buildpacks.io/docs/buildpack-author-guide/package-a-buildpack/).

A buildpackage can be packaged into a build service ready buildpackage with:

    pack package-buildpack

## <a id='remove-buildpackages-from-store'></a> Removing Buildpackages from the Store

Users can remove a buildpackage from the store:

    pb store remove <buildpackage>

## <a id='list-buildpackages-in-store'></a> Listing Buildpackages in the Store

To list the buildpackages & buildpacks in the store:

    pb store list

To list buildpackages & buildpacks and the display the order of "meta-buildpacks":

    pb store list --order

<p class='note'><strong>Note:</strong> The output of this command is helpful because it mirrors the format used when creating custom builders.</p>

## <a id='kpack-resources'></a> Corresponding kpack Resource

All Build Service builders utilize a cluster scoped [Store Resource](https://github.com/pivotal/kpack/blob/master/docs/custombuilders.md#store) with the name `build-service-store`.
